#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.100.15)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["CKLogo", "Rocks1", "Rocks2", "Mountain1", "Mountain2", "Atom1", "Planet1", "Planet2", "Planet3"]
    def "CKLogo" (
        active = true
        references = @CS_Logo.usdz@
    )
    {
        float3 xformOp:scale = (0.05, 0.05, 0.05)
        float3 xformOp:translate = (0.000008383766, 2.221463, -0.073705494)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Rocks1" (
        active = true
        customData = {
            float3 rotationEulerHint = (1.5707964, 0, 0)
        }
        references = @rocks.usdz@
    )
    {
        quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
        float3 xformOp:scale = (0.2, 0.2, 0.2)
        float3 xformOp:translate = (2.0932546, 0.5894968, -0.3)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Rocks2" (
        active = true
        customData = {
            float3 rotationEulerHint = (1.6580627, 0, 0)
        }
        references = @rocks.usdz@
    )
    {
        quatf xformOp:orient = (0.6755902, 0.7372773, 0, 0)
        float3 xformOp:scale = (0.2, 0.2, 0.2)
        float3 xformOp:translate = (-2.1893587, 0.61001194, -0.3)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "_materials"
        {
            over "r02Material_001"
            {
                token outputs:surface.connect = </Root/Rocks2/_materials/r02Material_001/Principled_BSDF.outputs:surface>

                over "Principled_BSDF"
                {
                    color3f inputs:diffuseColor.connect = </Root/Rocks2/_materials/r02Material_001/Image_Texture.outputs:rgb>
                    float3 inputs:normal.connect = </Root/Rocks2/_materials/r02Material_001/Image_Texture_001.outputs:rgb>
                }

                over "Image_Texture"
                {
                    float2 inputs:st.connect = </Root/Rocks2/_materials/r02Material_001/uvmap.outputs:result>
                }

                over "Image_Texture_001"
                {
                    float2 inputs:st.connect = </Root/Rocks2/_materials/r02Material_001/uvmap.outputs:result>
                }
            }

            over "r04Material_002"
            {
                token outputs:surface.connect = </Root/Rocks2/_materials/r04Material_002/Principled_BSDF.outputs:surface>

                over "Principled_BSDF"
                {
                    color3f inputs:diffuseColor.connect = </Root/Rocks2/_materials/r04Material_002/Image_Texture.outputs:rgb>
                    float3 inputs:normal.connect = </Root/Rocks2/_materials/r04Material_002/Image_Texture_001.outputs:rgb>
                }

                over "Image_Texture"
                {
                    float2 inputs:st.connect = </Root/Rocks2/_materials/r04Material_002/uvmap.outputs:result>
                }

                over "Image_Texture_001"
                {
                    float2 inputs:st.connect = </Root/Rocks2/_materials/r04Material_002/uvmap.outputs:result>
                }
            }

            over "r01Material_001"
            {
                token outputs:surface.connect = </Root/Rocks2/_materials/r01Material_001/Principled_BSDF.outputs:surface>

                over "Principled_BSDF"
                {
                    color3f inputs:diffuseColor.connect = </Root/Rocks2/_materials/r01Material_001/Image_Texture.outputs:rgb>
                    float3 inputs:normal.connect = </Root/Rocks2/_materials/r01Material_001/Image_Texture_001.outputs:rgb>
                }

                over "Image_Texture"
                {
                    float2 inputs:st.connect = </Root/Rocks2/_materials/r01Material_001/uvmap.outputs:result>
                }

                over "Image_Texture_001"
                {
                    float2 inputs:st.connect = </Root/Rocks2/_materials/r01Material_001/uvmap.outputs:result>
                }
            }

            over "r03Material_001"
            {
                token outputs:surface.connect = </Root/Rocks2/_materials/r03Material_001/Principled_BSDF.outputs:surface>

                over "Principled_BSDF"
                {
                    color3f inputs:diffuseColor.connect = </Root/Rocks2/_materials/r03Material_001/Image_Texture.outputs:rgb>
                    float3 inputs:normal.connect = </Root/Rocks2/_materials/r03Material_001/Image_Texture_001.outputs:rgb>
                }

                over "Image_Texture"
                {
                    float2 inputs:st.connect = </Root/Rocks2/_materials/r03Material_001/uvmap.outputs:result>
                }

                over "Image_Texture_001"
                {
                    float2 inputs:st.connect = </Root/Rocks2/_materials/r03Material_001/uvmap.outputs:result>
                }
            }

            over "r00Material_001"
            {
                token outputs:surface.connect = </Root/Rocks2/_materials/r00Material_001/Principled_BSDF.outputs:surface>

                over "Principled_BSDF"
                {
                    color3f inputs:diffuseColor.connect = </Root/Rocks2/_materials/r00Material_001/Image_Texture.outputs:rgb>
                    float3 inputs:normal.connect = </Root/Rocks2/_materials/r00Material_001/Image_Texture_001.outputs:rgb>
                }

                over "Image_Texture"
                {
                    float2 inputs:st.connect = </Root/Rocks2/_materials/r00Material_001/uvmap.outputs:result>
                }

                over "Image_Texture_001"
                {
                    float2 inputs:st.connect = </Root/Rocks2/_materials/r00Material_001/uvmap.outputs:result>
                }
            }
        }
    }

    def "Mountain1" (
        active = true
        customData = {
            float3 rotationEulerHint = (-1.5707964, 0, 0)
        }
        references = @Mountain01.usdz@
    )
    {
        quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-1.8580986, 1.0617077e-7, -0.3054)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Mountain2" (
        active = true
        customData = {
            float3 rotationEulerHint = (-1.5707964, 0, 0)
        }
        references = @Mountain02.usdz@
    )
    {
        quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (2.13794, 1.527369e-7, -0.3)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Atom1" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        references = @Atom2.usdz@
    )
    {
        rel material:binding = None (
            bindMaterialAs = "weakerThanDescendants"
        )
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (1.4235955, 2.8791087, -0.083032906)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Planet1" (
        active = true
        references = @Planet_01.usdz@
    )
    {
        float3 xformOp:scale = (0.35, 0.35, 0.35)
        float3 xformOp:translate = (1.4893382, 2.0728207, -0.51165503)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Planet2" (
        active = true
        references = @Planet_02.usdz@
    )
    {
        float3 xformOp:scale = (0.35, 0.35, 0.35)
        float3 xformOp:translate = (0.4332292, 3.269107, -0.04328534)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Planet3" (
        active = true
        references = @Planet_03.usdz@
    )
    {
        float3 xformOp:scale = (0.4, 0.4, 0.4)
        float3 xformOp:translate = (-1.213178, 2.8210711, -0.1894471)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Character" (
        active = true
        customData = {
            float3 rotationEulerHint = (-1.5707964, 0, 0)
        }
        prepend references = @Character.usdz@
    )
    {
        quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
        float3 xformOp:scale = (0.77087665, 0.77087665, 0.77087665)
        float3 xformOp:translate = (0.04852426, 0, 0.49055088)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

